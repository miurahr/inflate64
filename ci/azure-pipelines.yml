trigger:
  branches:
    include:
    - releases/*
    - main
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
jobs:
- job: Job_5
  displayName: Check and build sdist
  strategy:
    matrix:
      py38:
        - python.version: 3.8
      py39:
        - python.version: 3.9
      py310:
        - python.version: 3.10
      py311:
        - python.version: 3.11
      py312:
        - python.version: 3.12
      pypy39:
        - python.version: pypy3.9
  pool:
    vmImage: ubuntu-2204
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python $(python.version)
    inputs:
      versionSpec: $(python.version)
  - task: Bash@3
    displayName: Run tox check
    inputs:
      targetType: inline
      script: >-
        python -m pip install --upgrade pip setuptools setuptools_scm[toml] coverage[toml] tox importlib_metadata build
        python -m tox -e py
  - task: Bash@3
    displayName: build sdist
    condition: eq(variables['python.version'], '3.10')
    inputs:
      targetType: inline
      script: python -m build --sdist
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    condition: eq(variables['python.version'], '3.10')
    inputs:
      PathtoPublish: dist
      ArtifactName: wheelhouse
- job: Job_1
  displayName: cibuildwheel(linux)
  dependsOn: Job_5
  pool:
    vmImage: ubuntu-2204
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
    inputs:
      disableDownloadFromRegistry: true
  - task: Bash@3
    displayName: Install dependencies
    inputs:
      targetType: inline
      script: >
        set -o errexit
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==2.16.2
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_6
  displayName: cibuildwheel(aarch64)
  dependsOn: Job_5
  pool:
    vmImage: ubuntu-2204
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
  - task: Bash@3
    displayName: Install dependencies and qemu
    inputs:
      targetType: inline
      script: >-
        set -o errexit
        python -m pip install --upgrade pip
        docker pull tonistiigi/binfmt:latest
        docker run --rm --privileged tonistiigi/binfmt:latest --install arm64
        pip install cibuildwheel==2.16.2
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_2
  displayName: cibuildwheel(macos)
  dependsOn: Job_5
  pool:
    vmImage: macOS-15
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
    inputs:
      disableDownloadFromRegistry: true
  - task: Bash@3
    displayName: Install dependencies
    inputs:
      targetType: inline
      script: >
        set -o errexit
        python3 -m pip install --upgrade pip
        python3 -m pip install cibuildwheel==2.16.2
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: >
        cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_3
  displayName: cibuildwheel(windows)
  dependsOn: Job_5
  pool:
    vmImage: windows-2022
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
    inputs:
      disableDownloadFromRegistry: true
  - task: Bash@3
    displayName: Install dependecies
    inputs:
      targetType: inline
      script: >
        set -o errexit
        python -m pip install --upgrade pip
        pip install cibuildwheel==2.16.2
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_4
  displayName: Publish to PyPI
  dependsOn:
  - Job_1
  - Job_2
  - Job_3
  - Job_6
  pool:
    vmImage: ubuntu-2204
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
  - task: DownloadBuildArtifacts@1
    displayName: Download Build Artifacts
    inputs:
      artifactName: wheelhouse
      itemPattern: >
        **
      downloadPath: wheelhouse
  - task: Bash@3
    displayName: Install Dependencies
    inputs:
      targetType: inline
      script: >
        python -m pip install twine
  - task: TwineAuthenticate@1
    displayName: Twine Authenticate (testpyoi)
    condition: and(not(startsWith(variables['build.sourceBranch'], 'refs/tags/v')), startsWith(variables['build.sourceBranch'], 'refs/heads/releases/'))
    inputs:
      pythonUploadServiceConnection: cbfae95a-b677-4758-896a-7086730240dd
  - task: Bash@3
    displayName: Upload to Python Package Index(test)
    condition: and(succeeded(), not(startsWith(variables['build.sourceBranch'], 'refs/tags/v')), startsWith(variables['build.sourceBranch'], 'refs/heads/releases/'))
    inputs:
      targetType: inline
      script: >+
        python -m twine upload  --repository testpypi --config-file $(PYPIRC_PATH) wheelhouse/wheelhouse/*
  - task: TwineAuthenticate@1
    displayName: Twine Authenticate (pypi)
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/v')
    inputs:
      pythonUploadServiceConnection: 899a9551-6c03-4502-a494-b5c6bb1a964a
  - task: Bash@3
    displayName: Upload to Python Package Index
    condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
    inputs:
      targetType: inline
      script: >+
        python -m twine upload  --repository pypi --config-file $(PYPIRC_PATH) wheelhouse/wheelhouse/*
